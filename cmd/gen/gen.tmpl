{{- /*gotype: github.com/iCiaran/mc-server/cmd/gen.PacketInfo*/ -}}
// Code generated by gen {{ .CommandArgs }}; DO NOT EDIT.

package packets

import (
	"io"
	"encoding/json"
)

func Deserialize{{ .PacketType }}(reader io.Reader) ({{ .PacketType }}, int, error) {
  return {{ .PacketType }}{}, 0, nil
}

func (p {{ .PacketType }}) Serialize() ([]byte, error) {
	buffer := make([]byte, 0)

  packetIdBytes, err := VarInt({{ .PacketId }}).Serialize()
  if err != nil {
	  return nil, err
  }

  dataBuffer := make([]byte, 0)

  {{ range $index, $element := .Fields }}
  {{ if $element.IsJson }}
  {{ else }}
  field{{ $element.Name }}, err := p.{{ $element.Name }}.Serialize()
  if err != nil {
    return nil, err
  }
  dataBuffer = append(dataBuffer, field{{ $element.Name }}...)

  {{ end }}
  field{{ $element.Name }}, err := json.Marshal(p.{{ $element.Name }})
  if err != nil {
    return nil, err
  }

  field{{ $element.Name }}Length, err := VarInt(len(field{{ $element.Name }})).Serialize()
  if err != nil {
	  return nil, err
  }

  buffer = append(buffer, field{{ $element.Name }}Length...)
  buffer = append(buffer, field{{ $element.Name }}...)

  {{ end }}

  serializedLength, err := VarInt(len(packetIdBytes) + len(dataBuffer)).Serialize()
  if err != nil {
	  return nil, err
  }

  buffer = append(buffer, packetIdBytes...)
  buffer = append(buffer, serializedLength...)
  buffer = append(buffer, dataBuffer...)

	return buffer, nil
}